name: Server - Deploy on EC2

on:
  workflow_dispatch:
  push:
    branches: [main]
    paths: ["server/**"]

jobs:
  
  build:
    
    name: Build container on ECR
    runs-on: ubuntu-latest

   
    steps:

    - name: Check out code
      uses: actions/checkout@v2
    
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push image to Amazon ECR
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: hh-repo
        IMAGE_TAG: server
      run: |
        cd server
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

  deploy:
    name: Pull container on EC2
    needs: build
    runs-on: self-hosted
    steps:

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Login to Amazon ECR
        id: login-ecr-2
        uses: aws-actions/amazon-ecr-login@v1

      - name: Pull image from docker hub
        env:
          ECR_REGISTRY: ${{ steps.login-ecr-2.outputs.registry }}
          ECR_REPOSITORY: hh-repo
          IMAGE_TAG: server
        run: |
          cd ~ && cd server
          docker pull $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
      - name: Delete old container
        run: docker rm -f hhserver || true
      - name: Run docker container
        run: docker run -d --restart always -p 80:8080 --name hhserver $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG


